**Q1: What is data encoding? How is it useful in data science?**
Data encoding converts categorical data into a numerical format. It enables machine learning models to interpret and process non-numeric features, which is essential for model training.

**Q2: What is nominal encoding? Provide an example of how you would use it in a real-world scenario.**
Nominal encoding (also known as label encoding) assigns an integer to each category.
Example: Encoding `["Red", "Green", "Blue"]` as `{"Red": 0, "Green": 1, "Blue": 2}`. Useful when categories have no inherent order, like encoding city names.

**Q3: In what situations is nominal encoding preferred over one-hot encoding? Provide a practical example.**
Nominal encoding is preferred when:

* There are too many categories, and one-hot encoding would lead to high dimensionality.
  Example: Encoding thousands of zip codes or product IDs.

**Q4: Suppose you have a dataset containing categorical data with 5 unique values. Which encoding technique would you use to transform this data into a format suitable for machine learning algorithms? Explain why you made this choice.**
If the feature is nominal (no order), and few categories (5), use one-hot encoding for interpretability. If dimensionality is a concern, use nominal encoding.
E.g., `["Cat", "Dog", "Bird", "Fish", "Lizard"]` → One-hot results in 5 binary columns.

**Q5: In a machine learning project, you have a dataset with 1000 rows and 5 columns. Two of the columns are categorical, and the remaining three columns are numerical. If you use nominal encoding for the categorical data, how many new columns would be created?**
Nominal encoding replaces each column with one column of integer values. So, 2 categorical columns remain as 2 columns, no new columns are added.
Answer: **0 additional columns**.

**Q6: You are working with a dataset about animals (species, habitat, diet). Which encoding technique would you use? Justify.**
Use **one-hot encoding** to avoid implying any ordinal relationship between categories like species or habitat. These are nominal, unordered features and require binary representation for accurate model interpretation.

**Q7: Predicting customer churn with features like gender, age, contract type, etc. How would you encode them?**
Step-by-step:

1. **Gender** – Binary (e.g., Male = 0, Female = 1)
2. **Age** – Already numerical, keep as-is or scale
3. **Contract Type** – One-hot encode (`Month-to-month`, `One year`, `Two year`)
4. **Monthly Charges** – Already numerical
5. **Tenure** – Already numerical or bin into ranges if needed

Tools: Use `pandas.get_dummies()` for one-hot encoding and `LabelEncoder` from `sklearn` for nominal encoding where appropriate.
